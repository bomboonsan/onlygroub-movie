---
// TYPES
import type { Post } from '../../types/post';

import { Image } from 'astro:assets';

import "../../styles/content.scss";
import "../../styles/breadcrumb.scss";

import { GraphQLClient } from 'graphql-request';
import { ALL_POSTS_QUERY } from '../../queries/posts';

import { formatDateToThai } from '../../lib/formatDate';

import Layout from '../../layouts/Layout.astro';

import MoiveTemplate from '../../templates/Movie.astro';

import RelatedPosts from '../../components/RelatedPosts.astro';

export async function getStaticPaths() {
    let allPosts : any = [];
    let hasNextPage : boolean = true;
    let afterCursor : any = null;

    while (hasNextPage) { // วนลูปเพื่อดึงข้อมูลบทความทั้งหมด เพราะว่า WpGraphQL แสดงได้สูงสุดแค่ 100 บทความแต่หน้า
        const client = new GraphQLClient('https://api.onlygroub.com/graphql');
        const data : any = await client.request(ALL_POSTS_QUERY , { after: afterCursor });
        allPosts = allPosts.concat(data.posts.nodes);
        hasNextPage = data.posts.pageInfo.hasNextPage;
        afterCursor = data.posts.pageInfo.endCursor;
    }

    return allPosts.map((post: { slug: string }) => {
        const index = allPosts.indexOf(post);
        const prev = allPosts[index - 1];
        const next = allPosts[index + 1];
        return {
            params: { slug: post.slug },
            props: { post, prev, next },
        };
    });
}
let { post, prev, next }: { post: Post, prev?: Post, next?: Post } = Astro.props;
const relatedPosts = (post as any)?.relatedPosts.nodes;

let structuredData : any;
const randomRatingCount = Math.floor(Math.random() * (8 - 5 + 1) + 5);
structuredData  = `
{
    "@context": "https://schema.org",
    "@type": "Movie",
    "name": "${post.title}",
    "director": {
        "@type": "Person",
        "name": "${post.movie.director}"
    },
    "image": "${post.featuredImageMedium.node.sourceUrl}",
    "dateCreated": "${post.date}+07:00",
    "trailer": {
        "@type": "VideoObject",
        "name": "ตัวอย่างหนัง ${post.title}",
        "description": "ตัวอย่างหนัง ${post.title} HD",
        "thumbnailUrl": "${post.featuredImageMedium.node.sourceUrl}",
        "uploadDate": "${post.date}+07:00",
        "contentUrl": "https://youtu.be/${post.movie.youtubeId}",
        "embedUrl": "https://www.youtube.com/embed/${post.movie.youtubeId}"
    }
}`;


let raw : any = JSON.parse(post.seo.schema.raw);
const structuredData_json : any = JSON.parse(structuredData);
raw['@graph'].push(structuredData_json);

post.seo.schema.raw = JSON.stringify(raw);

post.seo.metaDesc = `ดูหนัง ${post.title} กำกับโดย ${post.movie.director} จะเข้าฉายวันที่ ${formatDateToThai(post.movie.releaseDate)} เตรียมดูหนังเต็มเรื่อง`;

post.seo.title = `ดูหนัง ${post.title}`;

const postID = (post as any).guid.split('?p=')[1];

---
<Layout seo={post.seo} type="movie">
    <MoiveTemplate post={post} prev={prev} next={next} relatedPosts={relatedPosts} />
    <RelatedPosts relatedPosts={relatedPosts} />
</Layout>
